{"version":3,"sources":["connectors.js","hooks.js","containers/ballot.js","containers/newBallotForm.js","Spinner.js","ConnectChain.js","home.js","utils.js","App.js","reportWebVitals.js","index.js"],"names":["injected","InjectedConnector","supportedChainIds","useContract","contractJson","address","useWeb3React","chainId","library","account","signer","useMemo","getSigner","connectUnchecked","Contract","abi","Ballot","useState","question","setQuestion","proposals","setProposals","votingStatus","setVotingStatus","checkedProposal","setCheckedPropsal","loading","setLoading","params","useParams","contract","BallotContract","useEffect","a","getQuestion","tmpQuestion","getList","tmpProposals","getVotingStatus","tmpVoitingStatus","tmpQuestionString","web3","utils","toUtf8","map","p","name","id","hexToNumberString","_hex","count","handleVote","console","log","vote","tx","wait","sum","reduce","acc","parseInt","Dimmer","active","Loader","Form","size","List","Item","Radio","label","value","onChange","checked","Button","disable","onClick","percent","Progress","Math","floor","progress","indexAnswers","NewBallotForm","answers","setAnswers","newBallotContractAddress","setNewBallotContractAddress","ethers","ContractFactory","fromSolidity","useCreateContract","deployerBallotContract","methods","useForm","handleSubmit","register","control","onSubmit","formData","formatBytes32String","Object","keys","prev","curr","currIndex","getAddress","deploy","deployed","d","widths","Field","Input","fluid","placeholder","input","ref","required","Content","visible","labelPosition","deletedAnswer","filter","hidden","Icon","type","to","className","Spinner","props","color","rest","width","height","viewBox","xmlns","stroke","fill","fillRule","transform","strokeWidth","strokeOpacity","cx","cy","r","attributeName","from","dur","repeatCount","ConnectChain","context","connector","activate","deactivate","error","React","activatingConnector","setActivatingConnector","undefined","activating","connected","disabled","triedEager","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","isDisconnect","buttonText","style","borderColor","cursor","position","top","left","display","alignItems","margin","marginLeft","IsConnectedWallet","HomePage","callMethod","process","getLibrary","provider","Web3Provider","pollingInterval","App","tried","setTried","isAuthorized","then","catch","useEagerConnect","homeProps","result","args","Grid","textAlign","verticalAlign","Column","maxWidth","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e8020e9.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector';\r\n// const supportedChainIds = process.env.NODE_ENV === 'development' ? [1337] : [1023];\r\nexport const injected = new InjectedConnector({ supportedChainIds: [1337, 1023] });\r\n","import { useState, useEffect, useMemo } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { ethers } from \"ethers\";\r\nimport { Contract } from '@ethersproject/contracts';\r\nimport { ContractFactory } from '@ethersproject/contracts';\r\nimport { injected } from './connectors';\r\n\r\n// console.log('ContractFactory', ContractFactory);\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then((isAuthorized) => {\r\n      if (isAuthorized) {\r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n  }, []); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleConnect = () => {\r\n        console.log(\"Handling 'connect' event\");\r\n        activate(injected);\r\n      };\r\n      const handleChainChanged = (chainId) => {\r\n        console.log(\"Handling 'chainChanged' event with payload\", chainId);\r\n        activate(injected);\r\n      };\r\n      const handleAccountsChanged = (accounts) => {\r\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts);\r\n        if (accounts.length > 0) {\r\n          activate(injected);\r\n        }\r\n      };\r\n      const handleNetworkChanged = (networkId) => {\r\n        console.log(\"Handling 'networkChanged' event with payload\", networkId);\r\n        activate(injected);\r\n      };\r\n\r\n      ethereum.on('connect', handleConnect);\r\n      ethereum.on('chainChanged', handleChainChanged);\r\n      ethereum.on('accountsChanged', handleAccountsChanged);\r\n      ethereum.on('networkChanged', handleNetworkChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener('connect', handleConnect);\r\n          ethereum.removeListener('chainChanged', handleChainChanged);\r\n          ethereum.removeListener('accountsChanged', handleAccountsChanged);\r\n          ethereum.removeListener('networkChanged', handleNetworkChanged);\r\n        }\r\n      };\r\n    }\r\n  }, [active, error, suppress, activate]);\r\n}\r\n\r\nexport function useBlockNumber() {\r\n  const { library } = useWeb3React();\r\n  const [blockNumber, setBlockNumber] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    if (!library) {\r\n      return;\r\n    }\r\n\r\n    const t = setInterval(async () => {\r\n      try {\r\n        setBlockNumber(await library.getBlockNumber());\r\n      } catch (ex) {\r\n        console.error('failed to get block number', ex);\r\n      }\r\n\r\n      return () => {\r\n        clearInterval(t);\r\n      };\r\n    }, 1000);\r\n  }, [library]);\r\n\r\n  return blockNumber;\r\n}\r\n\r\n/*\r\n  https://docs.ethers.io/v5/api/contract/contract-factory/\r\n  https://ethereum.stackexchange.com/questions/84637/deploy-contract-with-ether-js \r\n*/\r\nexport function useCreateContract(Contract) {\r\n  const { library, account } = useWeb3React();\r\n\r\n  if (!account) {\r\n    return [null, null];\r\n  }\r\n  \r\n  // console.log('useCreateContract account', account);\r\n\r\n  //https://github.com/ethers-io/ethers.js/issues/1197\r\n  const signer = library.getSigner(account); // .connectUnchecked();\r\n  // console.log('signer', signer);\r\n  return [ethers.ContractFactory.fromSolidity(Contract, signer), signer]\r\n}\r\n\r\nexport function useContract(contractJson, address) {\r\n  const { chainId, library, account } = useWeb3React();\r\n\r\n  // console.log('chainId', chainId); // нужно подключить кошелек и переключить его в сеть clover!\r\n  // if (!chainId || !contractJson.networks || !contractJson.networks[chainId]) {\r\n  // if (!chainId) {\r\n  //   return null;\r\n  // }\r\n\r\n  const signer = useMemo(() => chainId ? library.getSigner(account).connectUnchecked() : null, [chainId]);\r\n\r\n  const contract = useMemo(() => {\r\n    if (!signer) {\r\n      return null;\r\n    }\r\n\r\n    return new Contract(\r\n      address,\r\n      contractJson.abi,\r\n      signer\r\n    );\r\n  }, [address, contractJson.abi, signer]);\r\n\r\n  return contract;\r\n\r\n  /* return new Contract(\r\n    address || contractJson.networks[chainId].address,\r\n    contractJson.abi,\r\n    signer\r\n  ); */\r\n}\r\n\r\nexport function useContractCallData(contract, methodName, args) {\r\n  const blockNumber = useBlockNumber();\r\n  const [result, setResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!contract || !methodName) {\r\n      return null;\r\n    }\r\n\r\n    async function loadData() {\r\n      try {\r\n        const result = await contract[methodName](...args);\r\n        setResult(result);\r\n      } catch (ex) {\r\n        console.log(`failed call contract method ${methodName}: `, ex);\r\n      }\r\n    }\r\n\r\n    loadData();\r\n  }, [blockNumber]);\r\n\r\n  return result;\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport web3 from 'web3';\r\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Input,\r\n  Message,\r\n  Segment,\r\n  List,\r\n  Radio,\r\n  Dimmer,\r\n  Loader,\r\n  Progress,\r\n} from 'semantic-ui-react';\r\nimport { useLocation, useParams } from 'react-router-dom';\r\nimport { FormProvider, useForm, Controller } from 'react-hook-form';\r\nimport { useEagerConnect, useContract, useContractCallData } from '../hooks';\r\nimport BallotContract from '../contract_build/Ballot.json';\r\n\r\nexport default function Ballot(/* { proposals } */) {\r\n  const [question, setQuestion] = useState(null);\r\n  const [proposals, setProposals] = useState(null);\r\n  const [votingStatus, setVotingStatus] = useState(null);\r\n  const [checkedProposal, setCheckedPropsal] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const params = useParams();\r\n  const contract = useContract(BallotContract, params?.address);\r\n  // console.log('contract', contract);\r\n\r\n  useEffect(async () => {\r\n    setLoading(true);\r\n    const tmpQuestion = await contract?.getQuestion();\r\n    const tmpProposals = await contract?.getList();\r\n    const tmpVoitingStatus = await contract?.getVotingStatus();\r\n    const tmpQuestionString = tmpQuestion\r\n      ? web3.utils.toUtf8(tmpQuestion)\r\n      : null;\r\n\r\n    setVotingStatus(tmpVoitingStatus);\r\n    setQuestion(tmpQuestionString);\r\n    setProposals(\r\n      tmpProposals?.map((p) => {\r\n        const newProposal = {\r\n          name: web3.utils.toUtf8(p.name),\r\n          id: web3.utils.hexToNumberString(p.id._hex),\r\n          count: web3.utils.hexToNumberString(p.count._hex),\r\n        };\r\n        // console.log('p', newProposal);\r\n        return newProposal;\r\n      })\r\n    );\r\n    setLoading(false);\r\n  }, [contract]);\r\n\r\n  const handleVote = async () => {\r\n    setLoading(true);\r\n    console.log('handleVote');\r\n    const tx = await contract?.vote(checkedProposal);\r\n    console.log('result', tx);\r\n    await tx.wait();\r\n    setLoading(false);\r\n  };\r\n\r\n  console.log('votingStatus', votingStatus);\r\n  console.log('proposals', proposals);\r\n\r\n  const sum = proposals ? proposals.reduce((acc, p) => parseInt(p.count) + acc, 0) : 0;\r\n\r\n  return (\r\n    <>\r\n      <Dimmer active={loading}>\r\n        <Loader />\r\n      </Dimmer>\r\n      <Form size=\"large\" /*  onSubmit={handleSubmit(onSubmit)} */>\r\n        <h3>{question}</h3>\r\n        {!votingStatus && (\r\n          <>\r\n            <List>\r\n              {proposals &&\r\n                proposals.map((p) => (\r\n                  <List.Item key={p.id}>\r\n                    <Radio\r\n                      name=\"proposal\"\r\n                      // label={`${p.id}. ${p.name}`}\r\n                      label={`${p.name}`}\r\n                      value={p.id}\r\n                      onChange={() => setCheckedPropsal(p.id)}\r\n                      checked={p.id === checkedProposal}\r\n                    />\r\n                  </List.Item>\r\n                ))}\r\n            </List>\r\n            <Button disable={!checkedProposal} onClick={handleVote}>\r\n              Vote\r\n            </Button>\r\n          </>\r\n        )}\r\n        {votingStatus && (\r\n          <>\r\n            {proposals &&\r\n              proposals.map((p) => {\r\n                const percent = 100 / (sum / p.count);\r\n                return <Progress percent={Math.floor(percent * 100) / 100} progress>{p.name}</Progress>\r\n              })}\r\n          </>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport web3 from 'web3';\r\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { Link } from 'react-router-dom';\r\nimport { ethers } from 'ethers';\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Icon,\r\n  Header,\r\n  Image,\r\n  Input,\r\n  Message,\r\n  Segment,\r\n  Dimmer,\r\n  Loader,\r\n  // Ref,\r\n} from 'semantic-ui-react';\r\nimport { FormProvider, useForm, Controller } from 'react-hook-form';\r\nimport { useCreateContract } from '../hooks';\r\nimport BallotContract from '../contract_build/Ballot.json';\r\n// import BallotSol from '../../contracts/Ballot.sol';\r\nimport CounterContract from '../contract_build/Ballot.json';\r\n// import { ethers } from 'hardhat';\r\n\r\n/* function useEvent(name, func) {\r\n  useEffect(() => {\r\n    window.addEventListener(name, func);\r\n\r\n    return function cleanup() {\r\n      window.removeEventListener(name, func);\r\n    };\r\n  }, []);\r\n} */\r\n\r\nlet indexAnswers = 1;\r\n\r\nexport default function NewBallotForm() {\r\n  const [answers, setAnswers] = useState(['answer1']);\r\n  const [newBallotContractAddress, setNewBallotContractAddress] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [deployerBallotContract, signer] = useCreateContract(BallotContract);\r\n  // const [deployerBallotContract, signer] = useCreateContract(CounterContract);\r\n  const methods = useForm();\r\n  const { handleSubmit, control, register } = methods;\r\n\r\n  // console.log('signer', signer);\r\n\r\n  const onSubmit = async (formData) => {\r\n    setLoading(true);\r\n    console.log('formData', formData);\r\n\r\n    const question = ethers.utils.formatBytes32String(formData.question);\r\n    const answers = Object.keys(formData).reduce((prev, curr, currIndex) => {\r\n      if (curr !== 'question') {\r\n        console.log('prev', prev);\r\n        return [...prev, ethers.utils.formatBytes32String(formData[curr])];\r\n      }\r\n\r\n      return prev;\r\n    }, []);\r\n\r\n    // return null;\r\n    /*\r\n    0x33428EDD7e7802a1d5A19c113660D8f44FDD99D2\r\n    */\r\n    // const newBallotContract = await ethers.getContractFactory('Ballot');\r\n    const address = await signer.getAddress();\r\n    console.log('signer.getAddress()', address);\r\n    // console.log('web3.utils.fromAscii', web3.utils.fromAscii('test1'));\r\n    // https://docs.ethers.io/v5/single-page/#/v5/api/contract/contract-factory/\r\n    /* const contract = await deployerBallotContract.deploy([\r\n      ethers.utils.formatBytes32String('Rama11')\r\n    ]); */\r\n    const contract = await deployerBallotContract.deploy(question, answers);\r\n    console.log('contract', contract);\r\n    try {\r\n      console.log('contract address', contract.address);\r\n      // console.log(contract.deployTransaction.hash);\r\n      // const trans = contract.deployTransaction.wait();\r\n      // console.log('trans', trans);\r\n      const d = await contract.deployed();\r\n      setLoading(false);\r\n      setNewBallotContractAddress(contract.address);\r\n      console.log('contract deployed', d);\r\n      // console.log('contract.value()', contract.value());\r\n    } catch (e) {\r\n      console.log('error deploying contract', e);\r\n    }\r\n  };\r\n\r\n  const handleAddAnswer = () => {\r\n    setAnswers([...answers, `answer${++indexAnswers}`]);\r\n  };\r\n\r\n  const handleDeleteProposal = deletedAnswer => {\r\n    setAnswers([...answers.filter(a => a !== deletedAnswer)]);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dimmer active={loading}>\r\n        <Loader />\r\n      </Dimmer>\r\n      <FormProvider {...methods}>\r\n        <Form onSubmit={handleSubmit(onSubmit)} widths=\"equal\">\r\n          <>\r\n            <Form.Field>\r\n              <Input\r\n                fluid\r\n                placeholder=\"Why is the sky blue?\"\r\n                name=\"question\"\r\n                // label=\"Question\"\r\n                input={{ ref: register({ required: true }) }}\r\n                // action=\"Add\"\r\n                label={\r\n                  <Button onClick={handleAddAnswer}>\r\n                    <Button.Content visible>Add answer option</Button.Content>\r\n                  </Button>\r\n                }\r\n                labelPosition=\"right\"\r\n              />\r\n            </Form.Field>\r\n            <hr />\r\n            {answers.map((a) => (\r\n              <Form.Field>\r\n                <Input\r\n                  placeholder=\"...\"\r\n                  name={a}\r\n                  // input={{ ref: register }}\r\n                  input={{ ref: register({ required: true }) }}\r\n                  label={\r\n                    <Button onClick={() => handleDeleteProposal(a)}>\r\n                      <Button.Content hidden>\r\n                        <Icon name=\"delete\" />\r\n                      </Button.Content>\r\n                    </Button>\r\n                  }\r\n                  labelPosition=\"right\"\r\n                />\r\n              </Form.Field>\r\n            ))}\r\n          </>\r\n          <Form.Field>\r\n            <Button type=\"submit\">Create</Button>\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Link to=\"/\" className=\"ui gray small button\">\r\n              Cancel\r\n            </Link>\r\n          </Form.Field>\r\n          {newBallotContractAddress && (\r\n            <p>\r\n              You ballot address:{' '}\r\n              <Link to={`/${newBallotContractAddress}`}/*  target=\"_blank\" */>\r\n                {newBallotContractAddress}\r\n              </Link>\r\n            </p>\r\n          )}\r\n          <p>\r\n            You ballot address:{' '}\r\n            <Link to={`/0x27324CE59B9A1A929aaFFB57391dE86e7FD0EA3f`}>\r\n              0x27324CE59B9A1A929aaFFB57391dE86e7FD0EA3f\r\n            </Link>\r\n          </p>\r\n        </Form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\n// <!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->\r\nexport function Spinner(props) {\r\n  const { color, ...rest } = props\r\n  return (\r\n    <svg width=\"38\" height=\"38\" viewBox=\"0 0 38 38\" xmlns=\"http://www.w3.org/2000/svg\" stroke={color} {...rest}>\r\n      <g fill=\"none\" fillRule=\"evenodd\">\r\n        <g transform=\"translate(1 1)\" strokeWidth=\"2\">\r\n          <circle strokeOpacity=\".5\" cx=\"18\" cy=\"18\" r=\"18\" />\r\n          <path d=\"M36 18c0-9.94-8.06-18-18-18\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"rotate\"\r\n              from=\"0 18 18\"\r\n              to=\"360 18 18\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </path>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  )\r\n}","import React from 'react';\r\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';import {\r\n  Button,\r\n} from 'semantic-ui-react';\r\nimport { Spinner } from './Spinner';\r\nimport { injected } from './connectors';\r\nimport { useEagerConnect, useInactiveListener } from './hooks';\r\n\r\nexport default function ConnectChain(props) {\r\n  const context = useWeb3React();\r\n  const {\r\n    connector,\r\n    library,\r\n    chainId,\r\n    account,\r\n    activate,\r\n    deactivate,\r\n    active,\r\n    error,\r\n  } = context;\r\n\r\n  const [activatingConnector, setActivatingConnector] = React.useState();\r\n  React.useEffect(() => {\r\n    if (activatingConnector && activatingConnector === connector) {\r\n      setActivatingConnector(undefined);\r\n    }\r\n  }, [activatingConnector, connector]);\r\n\r\n  const activating = injected === activatingConnector;\r\n  const connected = injected === connector;\r\n  const disabled = !props.triedEager || !!activatingConnector || !!error;\r\n\r\n  useInactiveListener(!props.triedEager || !!activatingConnector);\r\n\r\n  let isDisconnect = !error && chainId;\r\n  const buttonText = isDisconnect\r\n    ? 'Disconnect'\r\n    : activating\r\n    ? 'Connectting'\r\n    : 'Connect';\r\n\r\n  return (\r\n    <Button\r\n      style={{\r\n        borderColor: activating ? 'orange' : connected ? 'green' : 'unset',\r\n        cursor: disabled ? 'unset' : 'pointer',\r\n        position: 'relative',\r\n      }}\r\n      className=\"ConnectButton\"\r\n      disabled={disabled}\r\n      onClick={() => {\r\n        if (!isDisconnect) {\r\n          setActivatingConnector(injected);\r\n          activate(injected);\r\n        } else {\r\n          deactivate();\r\n        }\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          position: 'absolute',\r\n          top: '0',\r\n          left: '0',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          color: 'black',\r\n          margin: '0 0 0 1rem',\r\n        }}\r\n      >\r\n        {activating && (\r\n          <Spinner\r\n            color={'red'}\r\n            style={{ height: '50%', marginLeft: '-1rem' }}\r\n          />\r\n        )}\r\n      </div>\r\n      {buttonText} wallet\r\n    </Button>\r\n  );\r\n}\r\n","import web3 from 'web3';\r\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\r\nimport { Web3Provider } from '@ethersproject/providers';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { isDevEnv } from './utils';\r\nimport ConnectChain from './ConnectChain';\r\nimport TestForm from './containers/testForm';\r\n\r\nfunction IsConnectedWallet() {\r\n  const { chainId, error } = useWeb3React();\r\n\r\n  return !error && !!chainId;\r\n}\r\n\r\nfunction ChainId() {\r\n  const { chainId, library } = useWeb3React();\r\n\r\n  return (\r\n    <div className=\"ChainIdWrapper\">\r\n      <span>Chain Id</span>\r\n      <span role=\"img\" aria-label=\"chain\">\r\n        ⛓\r\n      </span>\r\n      <span className=\"ChainIdText\">{chainId ?? 'Not Connected'}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function HomePage({ triedEager, callMethod, setProposals }) {\r\n  return (\r\n    <>\r\n      {isDevEnv() && false && <ChainId />}\r\n      <ConnectChain triedEager={triedEager} />\r\n      <hr />\r\n      {IsConnectedWallet() && (\r\n        <Link to=\"/new\" className=\"ui green small button\">\r\n          Create new ballot\r\n        </Link>\r\n      )}\r\n      {isDevEnv() && false && (\r\n        <TestForm callMethod={callMethod} setProposals={setProposals} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","export function isProductionEnv() {\r\n  return process.env.NODE_ENV === 'production';\r\n}\r\n\r\nexport function isDevEnv() {\r\n  return process.env.NODE_ENV === 'development';\r\n}\r\n\r\n","import { useState } from 'react';\nimport web3 from 'web3';\nimport { Web3ReactProvider, useWeb3React } from '@web3-react/core';\nimport { Web3Provider } from '@ethersproject/providers';\nimport {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams,\n  useLocation,\n} from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Input,\n  Message,\n  Segment,\n} from 'semantic-ui-react';\nimport { FormProvider, useForm, Controller } from 'react-hook-form';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Ballot from './containers/ballot';\nimport NewBallotForm from './containers/newBallotForm';\nimport HomePage from './home';\n\nimport { useEagerConnect, useContract, useContractCallData } from './hooks';\n\nimport BallotContract from './contract_build/Ballot.json';\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 5000;\n  return library;\n}\n\nfunction App(props) {\n  const triedEager = useEagerConnect();\n  const contract = useContract(\n    BallotContract,\n    '0x33428EDD7e7802a1d5A19c113660D8f44FDD99D2'\n  );\n  const [loading, setLoading] = useState(false);\n  const [proposals, setProposals] = useState([]);\n\n  const callMethod = async (name, ...args) => {\n    console.log('callMethod', name);\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    let result = null;\n\n    try {\n      console.log('await contract');\n      result = await contract[name](...args);\n      console.log('result', result);\n      if (name === 'getList') {\n        result.map((p) =>\n          console.log(\n            'result',\n            web3.utils.hexToNumberString(p.id._hex),\n            web3.utils.hexToNumberString(p.count._hex),\n            web3.utils.toUtf8(p.name)\n          )\n        );\n      } else {\n        console.log(\n          'result decoded',\n          web3.utils.toUtf8(result?.name || result)\n        );\n      }\n    } catch (ex) {\n      console.error('transaction error: ', ex);\n    } finally {\n      setLoading(false);\n    }\n\n    return result;\n  };\n\n  // const New = (props) => <NewBallotForm {...props} />;\n\n  const homeProps = { triedEager, callMethod, setProposals };\n\n  return (\n    <Grid textAlign=\"center\" style={{ height: '100vh' }} verticalAlign=\"middle\">\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <header className=\"App-header\">\n          <Link to=\"/\">\n            <h1>Ballot dapp</h1>\n          </Link>\n        </header>\n        <main>\n          <Switch>\n            <Route path=\"/new\">\n              <NewBallotForm />\n            </Route>\n            <Route path=\"/:address\">\n              <Ballot />\n            </Route>\n            <Route path=\"/\">\n              <HomePage {...homeProps} />\n            </Route>\n          </Switch>\n        </main>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default function () {\n  // console.log('PRODUCTION', process.env.NODE_ENV);\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <HashRouter>\n        <Route>\n          <App />\n        </Route>\n      </HashRouter>\n    </Web3ReactProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}